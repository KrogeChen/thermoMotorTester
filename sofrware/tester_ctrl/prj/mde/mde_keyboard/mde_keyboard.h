//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#ifndef snail_data_types
    #include ".\depend\snail_data_types.h"
#endif
//-----------------------------------------------------------------------------
#ifndef _MDE_KEYBOARD_H
#define _MDE_KEYBOARD_H
//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
#define  KeyAloneBit0     0x0001    //单独按键
#define  KeyAloneBit1     0x0002  
#define  KeyAloneBit2     0x0004  
#define  KeyAloneBit3     0x0008  
#define  KeyAloneBit4     0x0010
#define  KeyAloneBit5     0x0020  
#define  KeyAloneBit6     0x0040  
#define  KeyAloneBit7     0x0080  
//-----------------------------------------------------------------------------
#define  KeyGroupBit0     0x0100   //组合按键
#define  KeyGroupBit1     0x0200   //组合按键
#define  KeyGroupBit2     0x0400   //组合按键
#define  KeyGroupBit3     0x0800   //组合按键
//------------------------------------------------------------------------------
#define  NOCONTINUE       0xffff
//------------------------------------------------------------------------------
typedef enum
{
    KeyNone             = 0x00,
    KeyPushDown         = 0x01,
    KeyPushUp           = 0x02,
    KeyContinuousDown   = 0x04,
}KeyRetValue_Def;
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//------------------------------------------------------------------------------
//Task
//------------------------------------------------------------------------------
//名称: 获取键盘事件状态
//功能: 主循环调用
//入口: 无
// 
//出口: BN_TRUE 有键盘事件产生

sdt_bool Pull_KeyboardEvent_Task(void);
//------------------------------------------------------------------------------
//Event
//------------------------------------------------------------------------------
//Status
//------------------------------------------------------------------------------
//Function
//------------------------------------------------------------------------------
//名称:获取键值状态
//入口:
//    _In_KeyNumber,键盘序号                      <<--- 传入
//    _In_CosFristTime,ms首次持续键盘时间           <<--- 传入
//    _In_CosRepetTime,ms持续键盘重复产生时间       <<--- 传入

//
//出口:
//    键盘的状态值

KeyRetValue_Def Pull_KeyVauleStatus(sdt_int8u _In_KeyNumber,sdt_int16u _In_CosFristTime,sdt_int16u _In_CosRepetTime);
//------------------------------------------------------------------------------
//名称:设置屏蔽键盘位值
//入口:
//    _In_KeyPinBits,键盘位值                     <<--- 传入

//
//出口:
//     None

void Set_MaskOnceKeyBits(sdt_int16u _In_KeyPinBits);
//------------------------------------------------------------------------------
//名称:设置屏蔽键盘
//入口:
//     _In_KeyNumber,键盘序号                   <<--- 传入

//
//出口:
//     None

void Set_MaskOnceKeyNumber(sdt_int8u _In_KeyNumber);
//------------------------------------------------------------------------------
//名称:重新采样一次按键
//入口:
//     _In_KeyNumber,键盘序号                   <<--- 传入

//
//出口:
//     None

void ReCapture_DownKeyNumber(sdt_int8u _In_KeyNumber);
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

void mde_pushPhysics_keyPins(sdt_int16u in_keyPins);
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#endif
//++++++++++++++++++++++++++++++++++End+++++++++++++++++++++++++++++++++++++++++